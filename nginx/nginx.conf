
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    #######################
    ### 리버스 프록시 설정 ###
    #######################
    server {
        listen 80;
        server_name domain.com; ### DDNS 대상 도메인 (필요한 경우 서브도메인 포함) ###

        location / {
            proxy_pass http://localhost:3000; ### 대상 애플리케이션 URL ###

            # 웹소켓 설정
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            # 일반 헤더
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }
    }

    # 나머지 요청 거부
    server {
        listen 80 default_server;
        server_name _;
        return 403;
    }

#         ########################
#         ### 기본 설정 주석 처리 ###
#         ########################
#
#    server {
#         listen       80;
#         server_name  localhost;
#
#         #charset koi8-r;
#
#         #access_log  logs/host.access.log  main;
#
#         location / {
#             root   html;
#             index  index.html index.htm;
#         }
#
#         #error_page  404              /404.html;
#
#         # 서버 오류 페이지를 정적 페이지 /50x.html로 리다이렉트
#         #
#         error_page   500 502 503 504  /50x.html;
#         location = /50x.html {
#             root   html;
#         }
#
#         # PHP 스크립트를 127.0.0.1:80에서 수신 대기 중인 Apache로 프록시
#         #
#         #location ~ \.php$ {
#         #    proxy_pass   http://127.0.0.1;
#         #}
#
#         # PHP 스크립트를 127.0.0.1:9000에서 수신 대기 중인 FastCGI 서버로 전달
#         #
#         #location ~ \.php$ {
#         #    root           html;
#         #    fastcgi_pass   127.0.0.1:9000;
#         #    fastcgi_index  index.php;
#         #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
#         #    include        fastcgi_params;
#         #}
#
#         # Apache의 문서 루트가 nginx의 문서 루트와 일치하는 경우
#         # .htaccess 파일에 대한 접근 거부
#         #
#         #location ~ /\.ht {
#         #    deny  all;
#         #}
#    }


    ## IP, 이름, 포트 기반 구성을 혼합한 다른 가상 호스트
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    ## HTTPS 서버
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
